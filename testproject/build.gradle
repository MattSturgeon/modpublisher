plugins {
    id 'java'
    id "me.hypherionmc.modutils.modpublisher" version "1.0.19"
}

group = 'me.hypherionmc'
version = '1.0.18'

repositories {
    mavenCentral()
}

dependencies {

}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

assemble.dependsOn javadocJar, sourcesJar

publisher {
    apiKeys {
        curseforge = System.getenv("CURSE_TOKEN") // Required if you want to use Curseforge Upload
        modrinth = System.getenv("MODRINTH_TOKEN") // Required if you want to use Modrinth Upload
        //github = System.getenv("GITHUB_TOKEN") // Required if you want to use GitHub releases
    }

    debug = true // When enabled, no files will actually be uploaded
    curseID = 12345 // Curseforge Project ID
    modrinthID = "xyn8677dh" // Modrinth Project ID
    githubRepo = "OWNER/REPO" // For example, https://github.com/firstdarkdev/modpublisher OR firstdarkdev/modpublisher
    versionType = "release" // Release Type. Either release, beta, or alpha
    changelog = "Hello World" // Changelog file, or text. Only MARKDOWN is supported
    version = "1.3.0" // Used by modrinth and GitHub
    displayName = "MyAwesome Mod - Version" // Friendly display name for the file
    gameVersions = ["1.19.3", "1.19.4"] // Supported Game Versions
    loaders = ["forge", "fabric", "quilt"] // Supported Modloaders
    curseEnvironment = "both" // Set the new Curseforge mod type. Valid entries are client, server or both
    disableMalwareScanner = true // Disable the built in fractureiser scanner
    disableEmptyJarCheck = true // Disable checking if the required meta file for the modloaders are present in the jar. For example, fabric.mod.json on fabric and quilt
    artifact = jar // File or file location of the file to upload
    useModrinthStaging = false // Upload to modrinth Staging
    additionalFiles = [javadocJar, sourcesJar] // Additional files to upload
}

publishMod.dependsOn(jar)